# "   ----Словари----    "
# #dict - неизменяемый , итерируемый , неупорядоченный, неиндексируемый тип данных,предназначенный для хранения данных в парах (ключ,значение)

# user = {
#     'name' : 'Nastya',
#     'age' : 13,
#     'last_name':'Tuz'
# }
# print(user['name']) # 'Nastya'

# #ключи в словаре будут уникальными , поэтому если в словарь добавить значение по уже существуещему ключу,то сохранится последнее значение
# dict1 = {'a':1,'b':2,'a':3,'c':2}
# #('a':3,'b':2,'c':2)
# a = 1
# b = 2
# a = 3
# c = 2
# # a=3 b=2 c=2

# #ключами могут быть только хешируемые типы данных (неизменяемые типы данных)
# print(hash(10)) # 10
# dict1 = {
#     105:'some value',
#     'key1','some val 2',
#     None: 'some val 4',
#     True: 'some val 5'
# }

# "   ----Создание----    "
# dict1 = {'a':1 , 'b':2 , 'c':3}
# dict2 = dict([('a,1'),('b',2)])
# #('a':1,'b':2)
# list1 = ['a','b','c']
# list2 = [1,2,3]
# dict3 = dict(zip(list1, list2))
# # ('a':1), 'b':2, 'c':3)

# dict4 = ()
# dict4['name'] = 'Nastya'
# dict4['last_name'] = 'Tuz'
# print(dict4) # ('name': 'Nastya', 'last_name': 'Tuz')

# "   ----Методы в словарях----   "
# #get - метод который принимает в себя ключ , если такой ключ есть возвращает его значение , если такого ключа нет - (возвращает None или default значение)

# user = {
#     'name' : 'Nastya',
#     'age' : 13,
#     'last_name' : 'Tuz'
# }

# #user['10'] #KeyError: 'id'
# user.get('10') # None
# user.get('name') # 'Nastya'
# user.get('id', 10) # 10
# user.get('age', 20) # 13
# #default (значение по умолчанию) - возвращается если значения нет , если есть ключ, возвращается его значение
# #pop - метод который принимает ключ , удаляет пару под этим ключом возвращает удаленное значение

# #popitem - метод который удаляет пару , которая была добавленна последней в словарь
# dict1 = ('a':10,'b':20,'c':30)
# res = dict1.popitem()
# print(dict1) # ('a':10, 'b':20)
# print(res) # ('c':30)

# #update - расширяет словарь, вторым словарем
# dict1 = ('a':1)
# dict2 = ('b':2)
# dict1.update(dict2)
# print(dict1) #('a':1, 'b':2)
# print(dict2) #('b':2)

# "   ----Keys , Values , Items----   "
# #keys - возвращает список ключей
# #values - возвращает значение
# #items - возвращает все это по парам

# "   ----Итерируемые  ----   "
# for i in user: # когда проходимся по словарю - получаем ключи
#     print(1)
# #'name'
# #'age'
# #'last_name'

# for i in user.keys():
#     #когда итерируем dict_keys

# dict1 = {'a':1, 'b':2,'c':3}
#создайте новый словарь где ключами будут значение из dict1 a значение ключи из dict1
#dict1 = {'a':1, 'b':2,'c':3}
# dict2 = dict(zip(dict1.values(), dict1.keys()))
# print(dict2)   # [1,2,3]
#                # [a,b,c]

dict1 = {
    'a':{'key':1},
    'b':{'key':2},
    'c':{'key':3}
}
#res = {'a':1,'b':2,'c':3}

print(f"{dict1['a']['key']} {dict1['b']['key']} {dict1['c']['key']}")